

// 클래스의 생성자 : 새로운 인스턴스를 만들기 위해 호출하는 특수한 함수
// 생성자를 호출하면 클래스의 인스턴스를 만들어 반환받을 수 있다
// 생성자의 기늘 인스턴스의 속성을 초기화하고, 인스턴스 생성시 필요한 구문을 수행한다

// init이라는 함수를 통해 -> 인스턴스 생성시 필요한 구문을 수행
// init : 패러미터나 반환형이 없는 특수한 함수
// 생성자를 통해 인스턴스가 만들어 질 때 호출되는 함수


fun main() {
    // 인스턴스 생성을 통해 init이 호출되어 세 개의 인스턴스에 넣은 속성들이 출력된다
    var a = Person("박보영", 1990)
    var b = Person("전정국", 2004)
    var c = Person("장원영", 2004)

    // 보조 생성자를 통해 인스턴스 생성
    var d =Person("차은우")

}

class Person (var name: String, val birthYear: Int) {
    init {
        // this는 인스턴스 자신의 속성이나 함수를 호출하기 위해 클래스 내부에서 사용되는 키워드
        println("${this.birthYear}년생 ${this.name}님이 생성되었습니다.")
    }

    // 보조 생성자를 만들 때는 반드시 기본 생성자를 통해 속성을 초기화 해야 한다
    // 보조 생성자가 기본 생성자를 호출하도록 하려면
    // 콜론(:)을 붙인 후 this라는 키워드를 사용하고 기본 생성자가 필요로 하는 패러미터를 괄호안에 넣어준다
    constructor(name: String) : this(name, 1997) {
        println("보조 생성자 사용")
    }   // name은 받은 그대로 넘겨주고 년도는 1997년으로 고정하여 초기화
}

// 클래스를 만들 때 기본으로 선언하는 기본 생성자
// 필요에 따라 추가적으로 선언하는 보조 생성자 : constructor()

// 보조 생성자는 기본 생성자와 다른 형태의 생성자를 제공하여 인스턴스 생성시 편의를 제공하거나 추가적인 구문을 수행하는 기능을 제공